#include <dlfcn.h>
#include <iostream>
#include <string>
using namespace std;
static string macro_data=""
"\n"
"void FDC_Timing(bool save = 0){\n"
"  \n"
"  TDirectory *dir = (TDirectory*)gDirectory->FindObjectAny(\"FDC_Efficiency\");\n"
"  if(!dir) return;\n"
"  dir->cd();\n"
"\n"
"  gDirectory->cd(\"Residuals\");\n"
"\n"
"  TCanvas *cWireTiming = new TCanvas(\"cWireTiming\", \"WireTiming\", 1000, 800);\n"
"  cWireTiming->Divide(6,4);\n"
"  \n"
"  double cell[24];\n"
"  double cell_err[24];\n"
"  double wire[24];\n"
"  double wire_err[24];\n"
"\n"
"  double cath[24];\n"
"  double cath_err[24];\n"
"    \n"
"  double delta[24];\n"
"  double delta_err[24];\n"
"    \n"
"  double pull[24];\n"
"  double pull_err[24];\n"
"\n"
"  for(unsigned int icell=1; icell<=24; icell++){\n"
"    cWireTiming->cd(icell);\n"
"\n"
"    cell[icell-1] = icell;\n"
"    cell_err[icell-1] = 0;\n"
"    \n"
"    char hname[256];\n"
"    sprintf(hname, \"hWireTime_cell[%d]\", icell);\n"
"    TH1 *hWire = (TH1*)(gDirectory->Get(hname));\n"
"      \n"
"    hWire->GetXaxis()->SetTitle(\"Wire Time (ns)\");\n"
"    //hWire->Draw();\n"
"\n"
"    int tzero_bin = hWire->GetMaximumBin();\n"
"    double tzero = hWire->GetXaxis()->GetBinCenter(tzero_bin);\n"
"\n"
"    TF1 *fwire = new TF1(\"fwire\", \"gaus(0)\", tzero - 10, tzero + 10);\n"
"    fwire->SetLineColor(2);\n"
"    fwire->SetNpx(600);\n"
"    fwire->SetParameter(1,tzero);\n"
"    hWire->Fit(\"fwire\",\"q0r\");\n"
"    wire[icell-1] = fwire->GetParameter(1);\n"
"    wire_err[icell-1] = fwire->GetParError(1);\n"
"\n"
"    sprintf(hname, \"hCathodeTime_cell[%d]\", icell);\n"
"    TH1 *hCathode = (TH1*)(gDirectory->Get(hname));\n"
"      \n"
"    hCathode->GetXaxis()->SetTitle(\"Cathode Time (ns)\");\n"
"    //hCathode->Draw();\n"
"\n"
"    tzero_bin = hCathode->GetMaximumBin();\n"
"    tzero = hCathode->GetXaxis()->GetBinCenter(tzero_bin);\n"
"    hCathode->GetXaxis()->SetRangeUser(tzero-40,tzero+40);\n"
"\n"
"    TF1 *fcath = new TF1(\"fcath\", \"gaus(0)\", tzero - 20, tzero + 20);\n"
"    fcath->SetLineColor(2);\n"
"    fcath->SetNpx(600);\n"
"    fcath->SetParameter(1,tzero);\n"
"    hCathode->Fit(\"fcath\",\"qr\");\n"
"    cath[icell-1] = fcath->GetParameter(1);\n"
"    cath_err[icell-1] = fcath->GetParError(1);\n"
"\n"
"    sprintf(hname, \"hDeltaTime_cell[%d]\", icell);\n"
"    TH1 *hDelta = (TH1*)(gDirectory->Get(hname));\n"
"      \n"
"    hDelta->GetXaxis()->SetTitle(\"Wire Time - Cathode Time (ns)\");\n"
"    hDelta->Draw();\n"
"\n"
"    tzero_bin = hDelta->GetMaximumBin();\n"
"    tzero = hDelta->GetXaxis()->GetBinCenter(tzero_bin);\n"
"\n"
"    TF1 *fdelta = new TF1(\"fdelta\", \"gaus(0)\", tzero - 5, tzero + 5);\n"
"    fdelta->SetLineColor(2);\n"
"    fdelta->SetNpx(600);\n"
"    fdelta->SetParameter(1,tzero);\n"
"    hDelta->Fit(\"fdelta\",\"qr\");\n"
"    delta[icell-1] = fdelta->GetParameter(1);\n"
"    delta_err[icell-1] = fdelta->GetParError(1);\n"
"\n"
"    sprintf(hname, \"hPullTime_cell[%d]\", icell);\n"
"    TH1 *hPull = (TH1*)(gDirectory->Get(hname));\n"
"\n"
"    hPull->GetXaxis()->SetTitle(\"Pseudo Time (from pull) (ns)\");\n"
"    //hPull->Draw();\n"
"\n"
"    tzero_bin = hPull->GetMaximumBin();\n"
"    tzero = hPull->GetXaxis()->GetBinCenter(tzero_bin);\n"
"    hPull->GetXaxis()->SetRangeUser(tzero-10,tzero+10);\n"
"\n"
"    TF1 *fpull = new TF1(\"fpull\", \"gaus(0)\", tzero - 5, tzero + 3);\n"
"    fpull->SetLineColor(2);\n"
"    fpull->SetNpx(600);\n"
"    fpull->SetParameter(1,tzero);\n"
"    hPull->Fit(\"fpull\",\"q0r\");\n"
"    pull[icell-1] = fpull->GetParameter(1);\n"
"    pull_err[icell-1] = fpull->GetParError(1);\n"
"\n"
"  }\n"
"  \n"
"  TCanvas *cTiming = new TCanvas(\"cTiming\", \"Timing\", 1400, 1000);\n"
"  cTiming->Divide(2,2);\n"
"  cTiming->cd(1);\n"
"  \n"
"  TGraphErrors *gWireTiming = new TGraphErrors(24, cell, wire, cell_err, wire_err);\n"
"  gWireTiming->SetTitle(\"; Cell # ; Wire Timing (ns)\");\n"
"  gWireTiming->SetMarkerColor(1);\n"
"  gWireTiming->SetMarkerStyle(8);\n"
"  gWireTiming->Draw(\"AP\");\n"
"\n"
"  cTiming->cd(2);\n"
"  TGraphErrors *gCathTiming = new TGraphErrors(24, cell, cath, cell_err, cath_err);\n"
"  gCathTiming->SetTitle(\"; Cell # ; Cathode Timing (ns)\");\n"
"  gCathTiming->SetMarkerColor(2);\n"
"  gCathTiming->SetMarkerStyle(8);\n"
"  gCathTiming->Draw(\"AP\");\n"
"\n"
"  cTiming->cd(3);\n"
"  TGraphErrors *gDelta = new TGraphErrors(24, cell, delta, cell_err, delta_err);\n"
"  gDelta->SetTitle(\"; Cell # ; Wire - Cathode Timing (ns)\");\n"
"  gDelta->SetMarkerColor(4);\n"
"  gDelta->SetMarkerStyle(8);\n"
"  gDelta->Draw(\"AP\");\n"
"\n"
"  cTiming->cd(4);\n"
"  TGraphErrors *gPull = new TGraphErrors(24, cell, pull, cell_err, pull_err);\n"
"  gPull->SetTitle(\"; Cell # ; Pseudo Time from Pull (ns)\");\n"
"  gPull->SetMarkerColor(6);\n"
"  gPull->SetMarkerStyle(8);\n"
"  gPull->Draw(\"AP\");\n"
"}\n"
;
class FDC_Timing_rootspy_class{
   public:
   typedef void rmfcn(string, string, string);
   FDC_Timing_rootspy_class(){
      rmfcn* fcn = (rmfcn*)dlsym(RTLD_DEFAULT, "REGISTER_ROOTSPY_MACRO");
      if(fcn) (*fcn)("FDC_Timing","/", macro_data);
   }
};
static FDC_Timing_rootspy_class tmp;